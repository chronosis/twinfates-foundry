name: Release Creation

on: 
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write    
    steps:
    - uses: actions/checkout@v2

    # get part of the tag after the `v`
    - name: Extract version number
      id: get-version
      run: |
        echo "version=`jq .version module.json | sed 's/.\(.*\)/\1/' | sed 's/\(.*\)./\1/'`" >> $GITHUB_OUTPUT

    # Substitute the Manifest and Download URLs in the module.json
    - name: Substitute Manifest and Download Links For Versioned Ones
      id: sub_manifest_link_version
      uses: microsoft/variable-substitution@v1
      with:
        files: 'module.json'
      env:
        version: ${{steps.get-version.outputs.version}}
        url: https://github.com/${{github.repository}}
        manifest: https://github.com/${{github.repository}}/releases/latest/download/module.json
        download: https://github.com/${{github.repository}}/releases/download/${{steps.get-version.outputs.version}}/module.zip

    # Create a zip file with all files required by the module to add to the release
    - name: Create Release zip
      run: zip -r ./module.zip module.json README.md LICENSE lang/ lib/ packs/ src/

    # Create a release for this specific version
    - name: Create Versioned Release with Files
      id: create_version_release
      uses: ncipollo/release-action@v1
      if: endsWith(github.ref, 'master') # Only update the latest release when pushing to the master branch
      with:
        allowUpdates: false 
        name: Release ${{ steps.get-version.outputs.version }}
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: './module.json, ./module.zip'
        tag: ${{steps.get-version.outputs.version }}
